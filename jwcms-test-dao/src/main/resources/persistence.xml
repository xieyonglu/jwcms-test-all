<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://www.springframework.org/schema/beans"
	xsi:schemaLocation="
           http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       "
	default-autowire="byName">

	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
		<property name="driverClass">
			<value>${database.driver}</value>
		</property>
		<property name="jdbcUrl">
			<value>${database.url}</value>
		</property>
		<property name="user">
			<value>${database.username}</value>
		</property>
		<property name="password">
			<value>${database.password}</value>
		</property>
		<!--连接池中保留的最小连接数。 -->
		<property name="minPoolSize" value="10" />
		<!--连接池中保留的最大连接数。Default: 15 -->
		<property name="maxPoolSize" value="100" />
		<!--最大空闲时间,1800秒内未使用则连接被丢弃。若为0则永不丢弃。Default: 0 -->
		<property name="maxIdleTime" value="1800" />
		<!--当连接池中的连接耗尽的时候c3p0一次同时获取的连接数。Default: 3 -->
		<property name="acquireIncrement" value="3" />
		<property name="maxStatements" value="1000" />
		<property name="initialPoolSize" value="10" />
		<!--每60秒检查所有连接池中的空闲连接。Default: 0 -->
		<property name="idleConnectionTestPeriod" value="60" />
		<!--定义在从数据库获取新连接失败后重复尝试的次数。Default: 30 -->
		<property name="acquireRetryAttempts" value="30" />
		<property name="breakAfterAcquireFailure" value="false" />
		<property name="testConnectionOnCheckout" value="false" />
	</bean>

	<!-- <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean> -->
	
	<!-- <tx:annotation-driven transaction-manager="transactionManager" /> -->

	<!-- 定义Spring事物模板 -->
	<!-- <bean id="transactionTemplate" class="org.springframework.transaction.support.TransactionTemplate">
		<property name="transactionManager" ref="transactionManager" />
	</bean> -->

	<!-- spring和MyBatis，不需要mybatis的配置映射文件 -->
	<!-- <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="mapperLocations" value="classpath:jwcms/user/dao/mapper/*.xml" />
		<property name="configLocation" value="classpath:mybatis-config.xml"></property>
		<property name="typeAliasesPackage" value="jwcms.user.dao.model.*" />
	</bean>

	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
		<property name="basePackage" value="jwcms.user.dao" />
	</bean> -->


<!-- 	<bean id="mysqlTddlTransactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="mysqlTddlDataSource" />
	</bean>

	<bean id="transactionTemplate" class="org.springframework.transaction.support.TransactionTemplate">
		<property name="transactionManager" ref="mysqlTddlTransactionManager" />
	</bean>

	<alias name="mysqlTddlTransactionManager" alias="transactionManager" /> -->

	<!-- <bean id="lobHandler" class="org.springframework.jdbc.support.lob.DefaultLobHandler" />
		
		<bean id="sqlMapClient" class="org.springframework.orm.ibatis.SqlMapClientFactoryBean">
		<property name="configLocations">
		<list>
		<value>classpath*:mybatis-config.xml</value>
		</list>
		</property>
		<property name="dataSource" ref="mysqlTddlDataSource" />
		<property name="lobHandler" ref="lobHandler" />
		</bean> -->

	<!-- spring和MyBatis，不需要mybatis的配置映射文件 -->
	<bean id="sqlSessionFactory2" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:mybatis-config.xml" />
	</bean>

	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="jwcms.test.dao" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory2" />
	</bean>

	<!-- <bean id="seqConsultApplyRecord" class="com.taobao.tddl.client.sequence.impl.GroupSequence" init-method="init">
		<property name="sequenceDao" ref="idSequenceDao" />
		<property name="name" value="seq_consult_apply_record" />
		</bean> -->
</beans>

